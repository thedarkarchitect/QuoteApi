name: Continuous-Integration

on: 
    pull_request:
      branches: [main]

env:
    DATABASE_URL: postgresql://postgres:cheese66cakes@localhost:3030/Quotes?schema=public
    JWT_SECRET_ACCESS: c3631916090d54d31d4dd4d7a6ea7c025b2b28368b160a859f6e3468fb1bd688ed64c26505ef35a
    JWT_TOKEN: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JJZCI6MiwiYXV0aG9yTmFtZSI6IlJleW5vbGQiLCJpYXQiOjE3MTQxNTk2NDAsImV4cCI6MTcxNDQxODg0MH0.pERXMBH3tDxf60hX9VYsufE_dD29fwG7-TsqKMdk1E4

jobs:
    testing-api:
        runs-on: ubuntu-latest
        
        services:
            postgres:
                image: postgres:14-alpine
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: cheese66cakes
                    POSTGRES_DB: Quotes
                ports:
                    - 3030:3030

        
        steps:
            - name: Checkout code into the runner
              uses: actions/checkout@v4

            - name: setup nodejs on the runner
              uses: actions/setup-node@v4
              with:
                node-version: 18

            - name: Install npm packages
              run: npm ci

            - name: Run migration files against DB
              run: npx prisma migrate dev

            - name: run the integration tests
              run: npm test